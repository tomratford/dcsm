// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/dcsm.h"
#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// P01
vec P01(vec& l, vec& r, vec& z, String type, double theta01_, double theta02_, double theta12_, vec gammas01, vec knots01, vec gammas02, vec knots02, vec gammas12, vec knots12, vec boundaries);
RcppExport SEXP _dcsm_P01(SEXP lSEXP, SEXP rSEXP, SEXP zSEXP, SEXP typeSEXP, SEXP theta01_SEXP, SEXP theta02_SEXP, SEXP theta12_SEXP, SEXP gammas01SEXP, SEXP knots01SEXP, SEXP gammas02SEXP, SEXP knots02SEXP, SEXP gammas12SEXP, SEXP knots12SEXP, SEXP boundariesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec& >::type l(lSEXP);
    Rcpp::traits::input_parameter< vec& >::type r(rSEXP);
    Rcpp::traits::input_parameter< vec& >::type z(zSEXP);
    Rcpp::traits::input_parameter< String >::type type(typeSEXP);
    Rcpp::traits::input_parameter< double >::type theta01_(theta01_SEXP);
    Rcpp::traits::input_parameter< double >::type theta02_(theta02_SEXP);
    Rcpp::traits::input_parameter< double >::type theta12_(theta12_SEXP);
    Rcpp::traits::input_parameter< vec >::type gammas01(gammas01SEXP);
    Rcpp::traits::input_parameter< vec >::type knots01(knots01SEXP);
    Rcpp::traits::input_parameter< vec >::type gammas02(gammas02SEXP);
    Rcpp::traits::input_parameter< vec >::type knots02(knots02SEXP);
    Rcpp::traits::input_parameter< vec >::type gammas12(gammas12SEXP);
    Rcpp::traits::input_parameter< vec >::type knots12(knots12SEXP);
    Rcpp::traits::input_parameter< vec >::type boundaries(boundariesSEXP);
    rcpp_result_gen = Rcpp::wrap(P01(l, r, z, type, theta01_, theta02_, theta12_, gammas01, knots01, gammas02, knots02, gammas12, knots12, boundaries));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_illness_death_mod();
RcppExport SEXP _rcpp_module_boot_splines_mod();

static const R_CallMethodDef CallEntries[] = {
    {"_dcsm_P01", (DL_FUNC) &_dcsm_P01, 14},
    {"_rcpp_module_boot_illness_death_mod", (DL_FUNC) &_rcpp_module_boot_illness_death_mod, 0},
    {"_rcpp_module_boot_splines_mod", (DL_FUNC) &_rcpp_module_boot_splines_mod, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_dcsm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
